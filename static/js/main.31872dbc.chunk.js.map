{"version":3,"sources":["components/MessageForm.jsx","components/MyMessage.jsx","components/TheirMessage.jsx","components/ChatFeed.jsx","utils/configChat.js","utils/services/chatService.jsx","components/LoginForm.jsx","utils/services/userService.jsx","components/RegisterForm.jsx","App.jsx","index.jsx"],"names":["MessageForm","props","useState","value","setValue","chatId","creds","handleSubmit","e","preventDefault","text","trim","length","sendMessage","className","onSubmit","placeholder","onChange","target","isTyping","type","htmlFor","PictureOutlined","multiple","id","style","display","files","SendOutlined","MyMessage","message","attachments","src","file","alt","float","marginRight","color","backgroundColor","TheirMessage","lastMessage","isFirstMessageByUser","sender","username","avatar","marginLeft","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","title","keys","Object","key","lastMessageKey","width","renderMessage","height","configChat","getChat","a","password","authObject","axios","get","headers","addMemberToChat","post","LoginForm","setUsername","setPassword","localStorage","setItem","window","location","reload","toast","error","position","closeOnClick","required","align","to","createUser","firstName","lastName","bodyFormData","FormData","append","INITIAL_FORM_VALUES","VALIDATION_SCHEMA","Yup","shape","withRouter","user","data","success","setTimeout","history","push","initialValues","validationSchema","values","name","exact","path","render","getItem","projectID","userSecret","renderChatFeed","chatAppProps","component","RegisterForm","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.31872dbc.chunk.js","sourcesContent":["import { PictureOutlined, SendOutlined } from \"@ant-design/icons\";\r\nimport { useState } from \"react\";\r\nimport { isTyping, sendMessage } from \"react-chat-engine\";\r\n\r\nconst MessageForm = (props) => {\r\n    const [value, setValue] = useState('');\r\n    const { chatId, creds } = props;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const text = value.trim();\r\n        if (text.length > 0) sendMessage(creds, chatId, { text });\r\n        setValue('');\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setValue(e.target.value)\r\n        isTyping(props, chatId);\r\n    }\r\n\r\n    const handleUpload = (e) => {\r\n        sendMessage(creds, chatId, { files: e.target.files, text: '' })\r\n    }\r\n\r\n    return (\r\n        <form className=\"message-form\" onSubmit={handleSubmit}>\r\n            <input\r\n                className=\"message-input\"\r\n                placeholder=\"Send a message ...\"\r\n                value={value}\r\n                onChange={handleChange}\r\n                onSubmit={handleSubmit}\r\n                type=\"text\" />\r\n            <label htmlFor=\"upload-button\">\r\n                <span className=\"image-button\">\r\n                    <PictureOutlined className=\"picture-icon\" />\r\n                </span>\r\n            </label>\r\n            <input\r\n                type=\"file\"\r\n                multiple={false}\r\n                id=\"upload-button\"\r\n                style={{ display: 'none' }}\r\n                onChange={handleUpload}\r\n            />\r\n            <button type=\"submit\" className=\"send-button\">\r\n                <SendOutlined className=\"send-icon\" />\r\n            </button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default MessageForm;","const MyMessage = ({ message }) => {\r\n    if (message?.attachments?.length > 0) {\r\n        return (\r\n            <img\r\n                src={message.attachments[0].file}\r\n                alt=\"message-attachment\"\r\n                className=\"message-image\"\r\n                style={{ float: 'right' }}\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"message\" style={{ float: 'right', marginRight: '18px', color: 'white', backgroundColor: '#3B2A50' }}>\r\n            {message.text}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyMessage;","const TheirMessage = ({ lastMessage, message }) => {\r\n    const isFirstMessageByUser = !lastMessage || lastMessage.sender.username !== message.sender.username;\r\n\r\n    return (\r\n        <div className=\"message-row\">\r\n            {\r\n                isFirstMessageByUser && (\r\n                    <div\r\n                        className=\"message-avatar\"\r\n                        style={{ backgroundColor: `url(${message?.sender?.avatar})` }}\r\n                    ></div>\r\n                )\r\n            }\r\n            {\r\n                message?.attachments?.length > 0 > 0\r\n                    ? (\r\n                        <img\r\n                            src={message.attachments[0].file}\r\n                            alt=\"message-attachment\"\r\n                            className=\"message-image\"\r\n                            style={{ marginLeft: isFirstMessageByUser ? '4px' : '48px' }}\r\n                        />\r\n                    ) :\r\n                    (\r\n                        <div className=\"message\" style={{ float: 'left', backgroundColor: '#CABCDC', marginLeft: isFirstMessageByUser ? '4px' : '48px' }}>\r\n                            {message.text}\r\n                        </div>\r\n                    )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TheirMessage;","import MessageForm from './MessageForm';\r\nimport MyMessage from './MyMessage';\r\nimport TheirMessage from './TheirMessage';\r\n\r\nconst ChatFeed = (props) => {\r\n    const { chats, activeChat, userName, messages } = props;\r\n\r\n    const chat = chats && chats[activeChat];\r\n\r\n    const renderReadReceipts = (message, isMyMessage) => {\r\n        return chat.people.map((person, index) => person.last_read === message.id && (\r\n            <div\r\n                key={`read_${index}`}\r\n                className=\"read-receipt\"\r\n                style={{\r\n                    float: isMyMessage ? 'right' : 'left',\r\n                    backgroundColor: `url(${person?.person?.avatar})`\r\n                }}\r\n            />\r\n        ))\r\n    }\r\n\r\n    const renderMessage = () => {\r\n        const keys = Object.keys(messages);\r\n        return keys.map((key, index) => {\r\n            const message = messages[key];\r\n            const lastMessageKey = index === 0 ? null : keys[index - 1];\r\n            const isMyMessage = userName === message.sender.username;\r\n\r\n            return (\r\n                <div key={`msg_${index}`} style={{ width: '100%' }}>\r\n                    <div className=\"message-block\">\r\n                        {\r\n                            isMyMessage\r\n                                ? <MyMessage message={message} />\r\n                                : <TheirMessage message={message} lastMessage={message[lastMessageKey]} />\r\n                        }\r\n                    </div>\r\n                    <div className=\"read-receipts\" style={{ marginRight: isMyMessage ? '18px' : '0px', marginLeft: isMyMessage ? '0px' : '68px' }}>\r\n                        {renderReadReceipts(message, isMyMessage)}\r\n                    </div>\r\n                </div>\r\n            );\r\n        })\r\n    }\r\n\r\n    if (!chat) return 'Loading...';\r\n\r\n    return (\r\n        <div className=\"chat-feed\">\r\n            <div className=\"chat-title-container\">\r\n                <div className=\"chat-title\">{chat.title}</div>\r\n                {/* <div className=\"chat-subtitle\">\r\n                    {chat.people.map((person) => `${person.person.username}`)}\r\n                </div> */}\r\n            </div>\r\n            {renderMessage()}\r\n            <div style={{ height: '100px' }} />\r\n            <div className=\"message-form-container\">\r\n                <MessageForm {...props} chatId={activeChat} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatFeed;","export const configChat = {\r\n    'Project-ID': \"ea5ba2a5-b508-4188-8c35-a3ece97d86ff\",\r\n    'PRIVATE-KEY': \"299e1337-4cc3-44ca-a393-b75e4ad52cc7\",\r\n    'User-Name': 'AdminHome',\r\n    'User-Secret': 'AdminHome'\r\n}","import axios from \"axios\";\r\nimport { configChat } from './../configChat';\r\n\r\n\r\nexport async function getChat(username = configChat[\"User-Name\"], password = configChat[\"User-Secret\"]) {\r\n    const authObject = {\r\n        'Project-ID': configChat[\"Project-ID\"],\r\n        'User-Name': username,\r\n        'User-Secret': password\r\n    }\r\n\r\n    const chat = await axios.get('https://api.chatengine.io/chats', { headers: authObject });\r\n    return chat;\r\n}\r\n\r\nexport async function addMemberToChat(username) {\r\n    return await axios.post(`https://api.chatengine.io/chats/61463/people/`, { \"username\": username },\r\n        {\r\n            headers: {\r\n                'Project-ID': configChat[\"Project-ID\"],\r\n                'User-Name': configChat[\"User-Name\"],\r\n                'User-Secret': configChat[\"User-Secret\"]\r\n            }\r\n        }\r\n    );\r\n}","import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { getChat } from './../utils/services/chatService';\r\n\r\nconst LoginForm = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            await getChat(username, password);\r\n            localStorage.setItem('username', username);\r\n            localStorage.setItem('password', password);\r\n\r\n            window.location.reload();\r\n        } catch (error) {\r\n            toast.error('عملیات ثبت نام با شکست مواجه شد.', {\r\n                position: \"top-right\",\r\n                closeOnClick: true\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div className=\"row\">\r\n                <div className=\"form\">\r\n                    <h1 className=\"title\">Login</h1>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Username\"\r\n                            value={username}\r\n                            onChange={(e) => setUsername(e.target.value)}\r\n                            className=\"input\"\r\n                            required\r\n                        />\r\n                        <input\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            className=\"input\"\r\n                            required\r\n                        />\r\n                        <div align=\"center\">\r\n                            <button type=\"submit\" className=\"button\">\r\n                                <span>Start Chatting</span>\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                    <div className=\"div__singUp\">\r\n                        <span>Or Sign Up Using</span>\r\n                        <Link to=\"/register\" className=\"signUp\">SIGN UP</Link>\r\n                    </div>\r\n                </div>\r\n                <ToastContainer/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default LoginForm;","import axios from \"axios\";\r\nimport { configChat } from './../configChat';\r\n\r\nexport async function createUser(username, firstName, lastName, password) {\r\n    const authObject = {\r\n        'PRIVATE-KEY': configChat[\"PRIVATE-KEY\"],\r\n        \"Content-Type\": \"multipart/form-data\"\r\n    }\r\n\r\n    const bodyFormData = new FormData();\r\n    bodyFormData.append(\"username\", username);\r\n    bodyFormData.append(\"first_nameusername\", firstName);\r\n    bodyFormData.append(\"last_nameusername\", lastName);\r\n    bodyFormData.append(\"secret\", password);\r\n\r\n    return await axios.post('https://api.chatengine.io/users/',\r\n                bodyFormData, { headers: authObject });\r\n}","import { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { withRouter } from \"react-router\";\r\nimport { createUser } from \"../utils/services/userService\";\r\nimport { addMemberToChat, getChat } from \"../utils/services/chatService\";\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nconst INITIAL_FORM_VALUES = {\r\n    username: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: ''\r\n}\r\n\r\nconst VALIDATION_SCHEMA = Yup.object().shape({\r\n    username: Yup.string().required(\"Required\"),\r\n    firstName: Yup.string().required(\"Required\"),\r\n    lastName: Yup.string().required(\"Required\"),\r\n    password: Yup.string().required(\"Required\")\r\n});\r\n\r\n\r\nconst RegisterForm = (props) => {\r\n\r\n    const handleSubmit = async ({ username, firstName, lastName, password }) => {\r\n        try {\r\n            const user = await createUser(username, firstName, lastName, password);\r\n            if (user && user.data) {\r\n                // const chatInfo = await getChat();\r\n                // if (chatInfo) {\r\n                    await addMemberToChat(username);\r\n                    toast.success('عملیات ثبت نام با موفقیت انجام شد.', {\r\n                        position: \"bottom-right\",\r\n                        closeOnClick: true\r\n                    });\r\n                    setTimeout(() => {\r\n                        props.history.push(\"/\");\r\n                    }, 3000)\r\n                // }\r\n            }\r\n        } catch (error) {\r\n        toast.error('عملیات ثبت نام با شکست مواجه شد.', {\r\n            position: \"top-right\",\r\n            closeOnClick: true\r\n        })\r\n    }\r\n}\r\n\r\n\r\nreturn (\r\n    <div className=\"wrapper\">\r\n        <div className=\"row\">\r\n            <div className=\"form\">\r\n                <h1 className=\"title\">Register</h1>\r\n                <Formik\r\n                    initialValues={{ ...INITIAL_FORM_VALUES }}\r\n                    validationSchema={VALIDATION_SCHEMA}\r\n                    onSubmit={(values) => handleSubmit(values)}\r\n                >\r\n                    <Form>\r\n                        <Field name=\"username\" type=\"text\" placeholder=\"Enter name ...\" className=\"input\" />\r\n                        <ErrorMessage name=\"username\" />\r\n\r\n                        <Field name=\"firstName\" type=\"text\" placeholder=\"Enter firstName ...\" className=\"input\" />\r\n                        <ErrorMessage name=\"firstName\" />\r\n\r\n                        <Field name=\"lastName\" type=\"text\" placeholder=\"Enter lastName ...\" className=\"input\" />\r\n                        <ErrorMessage name=\"lastName\" />\r\n\r\n                        <Field name=\"password\" type=\"password\" placeholder=\"Enter password ...\" className=\"input\" />\r\n                        <ErrorMessage name=\"password\" />\r\n\r\n                        <div align=\"center\">\r\n                            <button type=\"submit\" className=\"button\">\r\n                                <span>REGISTER</span>\r\n                            </button>\r\n                        </div>\r\n                    </Form>\r\n                </Formik>\r\n            </div>\r\n            <ToastContainer />\r\n        </div>\r\n    </div>\r\n);\r\n}\r\n\r\nexport default withRouter(RegisterForm);","import React from 'react';\r\nimport { ChatEngine } from 'react-chat-engine';\r\nimport { withRouter, Route, Switch } from 'react-router-dom';\r\n\r\nimport './App.css';\r\n\r\nimport ChatFeed from './components/ChatFeed';\r\nimport LoginForm from './components/LoginForm';\r\nimport RegisterForm from './components/RegisterForm';\r\n\r\nconst App = (props) => {\r\n\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/\" render={() =>\r\n                !localStorage.getItem('username') ?\r\n                    <LoginForm /> :\r\n                    <ChatEngine\r\n                        height=\"100vh\"\r\n                        projectID='ea5ba2a5-b508-4188-8c35-a3ece97d86ff'\r\n                        userName={localStorage.getItem('username')}\r\n                        userSecret={localStorage.getItem('password')}\r\n                        renderChatFeed={(chatAppProps) => <ChatFeed {...chatAppProps} />}\r\n                    />\r\n            } />\r\n            <Route path=\"/register\" component={RegisterForm} />\r\n        </Switch>\r\n    );\r\n}\r\nexport default withRouter(App);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>,\r\n    document.getElementById('root'));\r\n"],"sourceRoot":""}